import { z } from "zod";
import fs from 'fs/promises';
import path from 'path';

export default function createHtmlReport() {
    return {
        name: "create_html_report",
        description: "ÁîüÊàêÁ≤æÁæéÁöÑHTMLÊ†ºÂºèÂõ¢Âª∫ËßÑÂàíÊä•Âëä",
        schema: {
            selectedPlan: z.object({
                id: z.string(),
                title: z.string(),
                strategy: z.string(),
                restaurant: z.object({
                    name: z.string(),
                    address: z.string(),
                    phone: z.string(),
                    rating: z.number(),
                    averagePrice: z.number(),
                    specialDishes: z.array(z.string()),
                    features: z.array(z.string())
                }),
                timeline: z.array(z.string()),
                costs: z.object({
                    perPerson: z.number(),
                    total: z.number(),
                    breakdown: z.array(z.object({
                        item: z.string(),
                        amount: z.number()
                    }))
                }),
                highlights: z.array(z.string()),
                pros: z.array(z.string()),
                cons: z.array(z.string())
            }).describe("Áî®Êà∑ÈÄâÂÆöÁöÑÂõ¢Âª∫ÊñπÊ°à"),
            
            eventDetails: z.object({
                eventName: z.string().optional().default("Âõ¢ÈòüÂª∫ËÆæËÅöÈ§êÊ¥ªÂä®"),
                eventDate: z.string().optional().default("ÂæÖÂÆö"),
                organizer: z.string().optional().default("Âõ¢ÈòüË¥üË¥£‰∫∫"),
                contact: z.string().optional().default("ÂæÖË°•ÂÖÖ")
            }).describe("Ê¥ªÂä®Âü∫Êú¨‰ø°ÊÅØ"),
            
            location: z.object({
                address: z.string(),
                city: z.string(),
                district: z.string()
            }).describe("Âá∫ÂèëÂú∞ÁÇπ‰ø°ÊÅØ")
        },
        handler: async ({ selectedPlan, eventDetails, location }) => {
            try {
                // ÁîüÊàêÂΩìÂâçÊó∂Èó¥Êà≥‰Ωú‰∏∫Êñá‰ª∂Âêç
                const timestamp = new Date().toISOString().replace(/[:.]/g, '-').substring(0, 19);
                const filename = `Âõ¢Âª∫ËßÑÂàíÊä•Âëä_${timestamp}.html`;
                
                // ËÆ°ÁÆóÊÄªË¥πÁî®
                const totalCost = selectedPlan.costs.breakdown.reduce((sum, item) => sum + item.amount, 0);
                
                // HTMLÊ®°Êùø
                const htmlContent = `<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${eventDetails.eventName} - Âõ¢Âª∫ËßÑÂàíÊä•Âëä</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
            color: white;
            padding: 40px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            font-weight: 700;
        }
        
        .header p {
            font-size: 1.2em;
            opacity: 0.9;
        }
        
        .content {
            padding: 40px;
        }
        
        .section {
            margin-bottom: 40px;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }
        
        .section-title {
            font-size: 1.8em;
            margin-bottom: 20px;
            color: #2c3e50;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .plan-overview {
            background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);
            color: white;
        }
        
        .plan-overview h2 {
            color: white;
        }
        
        .restaurant-info {
            background: #f8f9fa;
            border-left: 5px solid #00b894;
        }
        
        .timeline {
            background: #fff3cd;
            border-left: 5px solid #ffc107;
        }
        
        .costs {
            background: #d1ecf1;
            border-left: 5px solid #17a2b8;
        }
        
        .notes {
            background: #f8d7da;
            border-left: 5px solid #dc3545;
        }
        
        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .info-card {
            background: rgba(255,255,255,0.2);
            padding: 20px;
            border-radius: 10px;
            backdrop-filter: blur(10px);
        }
        
        .info-card h3 {
            margin-bottom: 10px;
            font-size: 1.2em;
        }
        
        .restaurant-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-top: 20px;
        }
        
        .detail-item {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 15px;
            font-size: 1.1em;
        }
        
        .icon {
            font-size: 1.2em;
            width: 25px;
        }
        
        .timeline-list {
            list-style: none;
            position: relative;
        }
        
        .timeline-list li {
            padding: 15px 0 15px 40px;
            position: relative;
            border-left: 2px solid #ffc107;
        }
        
        .timeline-list li:before {
            content: '';
            position: absolute;
            left: -6px;
            top: 20px;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: #ffc107;
        }
        
        .cost-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        
        .cost-table th,
        .cost-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        .cost-table th {
            background: #17a2b8;
            color: white;
            font-weight: 600;
        }
        
        .cost-table .total {
            background: #e9ecef;
            font-weight: bold;
            font-size: 1.1em;
        }
        
        .highlight-list {
            list-style: none;
            margin-top: 15px;
        }
        
        .highlight-list li {
            padding: 8px 0;
            padding-left: 25px;
            position: relative;
        }
        
        .highlight-list.pros li:before {
            content: '‚úÖ';
            position: absolute;
            left: 0;
        }
        
        .highlight-list.cons li:before {
            content: '‚ö†Ô∏è';
            position: absolute;
            left: 0;
        }
        
        .highlight-list.features li:before {
            content: 'üéØ';
            position: absolute;
            left: 0;
        }
        
        .contact-info {
            background: #e8f5e8;
            border-left: 5px solid #28a745;
            padding: 20px;
            border-radius: 10px;
            margin-top: 30px;
        }
        
        .footer {
            text-align: center;
            padding: 30px;
            background: #f8f9fa;
            color: #6c757d;
            font-style: italic;
        }
        
        @media (max-width: 768px) {
            .restaurant-details {
                grid-template-columns: 1fr;
            }
            
            .header h1 {
                font-size: 2em;
            }
            
            .content {
                padding: 20px;
            }
            
            .section {
                padding: 20px;
            }
        }
        
        .print-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 50px;
            padding: 15px 25px;
            font-size: 16px;
            cursor: pointer;
            box-shadow: 0 5px 15px rgba(0,123,255,0.3);
            transition: all 0.3s ease;
        }
        
        .print-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,123,255,0.4);
        }
        
        @media print {
            .print-btn {
                display: none;
            }
            
            body {
                background: white;
                padding: 0;
            }
            
            .container {
                box-shadow: none;
                border-radius: 0;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéâ ${eventDetails.eventName}</h1>
            <p>Á≤æÂøÉÁ≠ñÂàíÁöÑÂõ¢Âª∫Ê¥ªÂä®ÊñπÊ°à</p>
        </div>
        
        <div class="content">
            <!-- ÊñπÊ°àÊ¶ÇËßà -->
            <div class="section plan-overview">
                <h2 class="section-title">üìã ${selectedPlan.title}</h2>
                <p style="font-size: 1.2em; margin-bottom: 20px;">${selectedPlan.strategy}</p>
                
                <div class="info-grid">
                    <div class="info-card">
                        <h3>Ê¥ªÂä®Êó•Êúü</h3>
                        <p>${eventDetails.eventDate}</p>
                    </div>
                    <div class="info-card">
                        <h3>ÂèÇ‰∏é‰∫∫Êï∞</h3>
                        <p>${selectedPlan.costs.total / selectedPlan.costs.perPerson}‰∫∫</p>
                    </div>
                    <div class="info-card">
                        <h3>È¢ÑÁÆóÊÄªËÆ°</h3>
                        <p>¬•${totalCost.toLocaleString()}</p>
                    </div>
                    <div class="info-card">
                        <h3>‰∫∫ÂùáË¥πÁî®</h3>
                        <p>¬•${Math.round(totalCost / (selectedPlan.costs.total / selectedPlan.costs.perPerson))}</p>
                    </div>
                </div>
            </div>
            
            <!-- È§êÂéÖ‰ø°ÊÅØ -->
            <div class="section restaurant-info">
                <h2 class="section-title">üçΩÔ∏è ÁõÆÊ†áÈ§êÂéÖ</h2>
                <h3 style="font-size: 1.5em; color: #00b894; margin-bottom: 20px;">${selectedPlan.restaurant.name}</h3>
                
                <div class="restaurant-details">
                    <div>
                        <div class="detail-item">
                            <span class="icon">üìç</span>
                            <span>${selectedPlan.restaurant.address}</span>
                        </div>
                        <div class="detail-item">
                            <span class="icon">üìû</span>
                            <span>${selectedPlan.restaurant.phone}</span>
                        </div>
                        <div class="detail-item">
                            <span class="icon">‚≠ê</span>
                            <span>${selectedPlan.restaurant.rating}/5.0 ÂàÜ</span>
                        </div>
                        <div class="detail-item">
                            <span class="icon">üí∞</span>
                            <span>‰∫∫Âùá ¬•${selectedPlan.restaurant.averagePrice}</span>
                        </div>
                    </div>
                    <div>
                        <h4>üéØ Ê¥ªÂä®‰∫ÆÁÇπ</h4>
                        <ul class="highlight-list features">
                            ${selectedPlan.highlights.map(highlight => `<li>${highlight}</li>`).join('')}
                        </ul>
                    </div>
                </div>
                
                <div style="margin-top: 25px;">
                    <h4>üçú ÊãõÁâåËèúÂìÅ</h4>
                    <p style="margin-top: 10px; font-size: 1.1em; color: #555;">
                        ${selectedPlan.restaurant.specialDishes.join('„ÄÅ')}
                    </p>
                </div>
            </div>
            
            <!-- Êó∂Èó¥ÂÆâÊéí -->
            <div class="section timeline">
                <h2 class="section-title">‚è∞ Ê¥ªÂä®Êó∂Èó¥ÂÆâÊéí</h2>
                <ul class="timeline-list">
                    ${selectedPlan.timeline.map(time => `<li>${time}</li>`).join('')}
                </ul>
            </div>
            
            <!-- Ë¥πÁî®ÊòéÁªÜ -->
            <div class="section costs">
                <h2 class="section-title">üí∞ Ë¥πÁî®È¢ÑÁÆóÊòéÁªÜ</h2>
                <table class="cost-table">
                    <thead>
                        <tr>
                            <th>È°πÁõÆ</th>
                            <th>ÈáëÈ¢ù</th>
                            <th>ËØ¥Êòé</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${selectedPlan.costs.breakdown.map(item => `
                            <tr>
                                <td>${item.item}</td>
                                <td>¬•${item.amount.toLocaleString()}</td>
                                <td>${item.item === 'È§êË¥π' ? `‰∫∫Âùá¬•${selectedPlan.costs.perPerson}` : 'È¢Ñ‰º∞Ë¥πÁî®'}</td>
                            </tr>
                        `).join('')}
                        <tr class="total">
                            <td>ÊÄªËÆ°</td>
                            <td>¬•${totalCost.toLocaleString()}</td>
                            <td>ÊâÄÊúâË¥πÁî®ÂêàËÆ°</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            
            <!-- Ê≥®ÊÑè‰∫ãÈ°π -->
            <div class="section notes">
                <h2 class="section-title">üìù Ê≥®ÊÑè‰∫ãÈ°π</h2>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 30px; margin-top: 20px;">
                    <div>
                        <h4 style="color: #28a745; margin-bottom: 15px;">‚úÖ ÊñπÊ°à‰ºòÂäø</h4>
                        <ul class="highlight-list pros">
                            ${selectedPlan.pros.map(pro => `<li>${pro}</li>`).join('')}
                        </ul>
                    </div>
                    <div>
                        <h4 style="color: #dc3545; margin-bottom: 15px;">‚ö†Ô∏è Ê≥®ÊÑè‰∫ãÈ°π</h4>
                        <ul class="highlight-list cons">
                            ${selectedPlan.cons.map(con => `<li>${con}</li>`).join('')}
                        </ul>
                    </div>
                </div>
            </div>
            
            <!-- ËÅîÁ≥ª‰ø°ÊÅØ -->
            <div class="contact-info">
                <h3 style="margin-bottom: 15px;">üì± ËÅîÁ≥ª‰ø°ÊÅØ</h3>
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;">
                    <div>
                        <strong>Ê¥ªÂä®ÁªÑÁªáËÄÖÔºö</strong><br>
                        ${eventDetails.organizer}
                    </div>
                    <div>
                        <strong>ËÅîÁ≥ªÊñπÂºèÔºö</strong><br>
                        ${eventDetails.contact}
                    </div>
                    <div>
                        <strong>Âá∫ÂèëÂú∞ÁÇπÔºö</strong><br>
                        ${location.address}
                    </div>
                    <div>
                        <strong>È§êÂéÖÁîµËØùÔºö</strong><br>
                        ${selectedPlan.restaurant.phone}
                    </div>
                </div>
            </div>
        </div>
        
        <div class="footer">
            <p>Êú¨Êä•ÂëäÁî± MCP Âõ¢Âª∫ËßÑÂàíÁ≥ªÁªüËá™Âä®ÁîüÊàê | ÁîüÊàêÊó∂Èó¥Ôºö${new Date().toLocaleString('zh-CN')}</p>
        </div>
    </div>
    
    <button class="print-btn" onclick="window.print()">üñ®Ô∏è ÊâìÂç∞Êä•Âëä</button>
    
    <script>
        // Ê∑ªÂä†‰∏Ä‰∫õ‰∫§‰∫íÊïàÊûú
        document.addEventListener('DOMContentLoaded', function() {
            // Âπ≥ÊªëÊªöÂä®
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    document.querySelector(this.getAttribute('href')).scrollIntoView({
                        behavior: 'smooth'
                    });
                });
            });
            
            // ÁÇπÂáªË¥πÁî®Ë°®Ë°åÈ´ò‰∫Æ
            document.querySelectorAll('.cost-table tr').forEach(row => {
                row.addEventListener('click', function() {
                    document.querySelectorAll('.cost-table tr').forEach(r => r.style.background = '');
                    this.style.background = '#f0f8ff';
                });
            });
        });
    </script>
</body>
</html>`;

                // ‰øùÂ≠òHTMLÊñá‰ª∂
                const filePath = path.join(process.cwd(), filename);
                await fs.writeFile(filePath, htmlContent, 'utf8');
                
                return {
                    content: [
                        {
                            type: "text",
                            text: `üéâ HTMLÂõ¢Âª∫ËßÑÂàíÊä•ÂëäÁîüÊàêÊàêÂäüÔºÅ

üìÅ Êñá‰ª∂‰ø°ÊÅØÔºö
- Êñá‰ª∂ÂêçÔºö${filename}
- ‰øùÂ≠ò‰ΩçÁΩÆÔºö${filePath}
- Êñá‰ª∂Â§ßÂ∞èÔºö${Math.round(htmlContent.length / 1024)} KB

üìã Êä•ÂëäÂÜÖÂÆπÂåÖÂê´Ôºö
‚úÖ Ê¥ªÂä®Ê¶ÇËßàÂíåÂü∫Êú¨‰ø°ÊÅØ
‚úÖ È§êÂéÖËØ¶ÁªÜ‰ø°ÊÅØÂíåÁâπËâ≤
‚úÖ ÂÆåÊï¥ÁöÑÊó∂Èó¥ÂÆâÊéíË°®
‚úÖ ËØ¶ÁªÜÁöÑË¥πÁî®È¢ÑÁÆóÊòéÁªÜ
‚úÖ ÊñπÊ°à‰ºòÂäøÂíåÊ≥®ÊÑè‰∫ãÈ°π
‚úÖ ÂÆåÊï¥ÁöÑËÅîÁ≥ª‰ø°ÊÅØ

üåê ‰ΩøÁî®ÊñπÂºèÔºö
1. Âú®ÊµèËßàÂô®‰∏≠ÊâìÂºÄ ${filename}
2. ÂèØ‰ª•Áõ¥Êé•ÊâìÂç∞Êàñ‰øùÂ≠ò‰∏∫PDF
3. ÊîØÊåÅÊâãÊú∫ÂíåÁîµËÑëÊü•Áúã
4. ÂèØ‰ª•ÂàÜ‰∫´ÁªôÂõ¢ÈòüÊàêÂëò

üí° Êä•ÂëäÁâπËâ≤Ôºö
- Áé∞‰ª£ÂåñËÆæËÆ°ÔºåËßÜËßâÊïàÊûú‰Ω≥
- ÂìçÂ∫îÂºèÂ∏ÉÂ±ÄÔºåÈÄÇÈÖçÂêÑÁßçËÆæÂ§á
- ÂåÖÂê´ÊâìÂç∞ÂèãÂ•ΩÊ†∑Âºè
- ‰∫§‰∫íÂºèÂÖÉÁ¥†ÔºåÊèêÂçáÁî®Êà∑‰ΩìÈ™å

Âõ¢Âª∫ËßÑÂàíÂÆåÊàêÔºÅËØ∑Âú®ÊµèËßàÂô®‰∏≠Êü•ÁúãÊÇ®ÁöÑ‰∏ìÂ±ûÂõ¢Âª∫Êä•Âëä„ÄÇ`
                        }
                    ],
                    filePath: filePath,
                    fileName: filename,
                    fileSize: htmlContent.length
                };
                
            } catch (error) {
                return {
                    content: [
                        {
                            type: "text",
                            text: `‚ùå ÁîüÊàêHTMLÊä•ÂëäÊó∂Âá∫Áé∞ÈîôËØØÔºö${error.message}\n\nËØ∑Ê£ÄÊü•Êñá‰ª∂ÂÜôÂÖ•ÊùÉÈôêÊàñÁ£ÅÁõòÁ©∫Èó¥„ÄÇ`
                        }
                    ],
                    error: error.message
                };
            }
        }
    };
} 